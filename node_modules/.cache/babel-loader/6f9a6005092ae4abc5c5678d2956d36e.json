{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { fabric } from \"fabric\";\nimport React from 'react';\n\nconst UseFabric = () => {\n  _s();\n\n  const canvas = React.useRef(null);\n  const fabricRef = React.useCallback(element => {\n    var _canvas$current;\n\n    if (!element) return (_canvas$current = canvas.current) === null || _canvas$current === void 0 ? void 0 : _canvas$current.dispose();\n    canvas.current = new fabric.Canvas(element, {\n      backgroundColor: '#eee'\n    });\n    canvas.current.add(new fabric.Rect({\n      top: 100,\n      left: 100,\n      width: 100,\n      height: 100,\n      fill: 'red'\n    }));\n  }, []);\n  return fabricRef;\n};\n\n_s(UseFabric, \"RhJR1aLA6cOHkaDnocHmi85QDic=\");\n\n_c = UseFabric;\nexport default UseFabric;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFabric\");","map":{"version":3,"sources":["/home/haleel/Downloads/Vidyalai font-end task/frontend-task/src/UseFabric.js"],"names":["fabric","React","UseFabric","canvas","useRef","fabricRef","useCallback","element","current","dispose","Canvas","backgroundColor","add","Rect","top","left","width","height","fill"],"mappings":";;AACA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGE,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAa,IAAb,CAAf;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACK,WAAN,CAAmBC,OAAD,IAAa;AAAA;;AAC/C,QAAI,CAACA,OAAL,EAAc,0BAAOJ,MAAM,CAACK,OAAd,oDAAO,gBAAgBC,OAAhB,EAAP;AAEdN,IAAAA,MAAM,CAACK,OAAP,GAAiB,IAAIR,MAAM,CAACU,MAAX,CAAkBH,OAAlB,EAA2B;AAACI,MAAAA,eAAe,EAAE;AAAlB,KAA3B,CAAjB;AACAR,IAAAA,MAAM,CAACK,OAAP,CAAeI,GAAf,CAAmB,IAAIZ,MAAM,CAACa,IAAX,CACjB;AAACC,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,GAAjB;AAAsBC,MAAAA,KAAK,EAAE,GAA7B;AAAkCC,MAAAA,MAAM,EAAE,GAA1C;AAA+CC,MAAAA,IAAI,EAAE;AAArD,KADiB,CAAnB;AAGD,GAPiB,EAOf,EAPe,CAAlB;AAQA,SAAOb,SAAP;AACD,CAXD;;GAAMH,S;;KAAAA,S;AAcR,eAAeA,SAAf","sourcesContent":["\nimport { fabric } from \"fabric\";\nimport React from 'react'\n\n\n  const UseFabric = () => {\n    const canvas = React.useRef(null);\n    const fabricRef = React.useCallback((element) => {\n      if (!element) return canvas.current?.dispose();\n  \n      canvas.current = new fabric.Canvas(element, {backgroundColor: '#eee'});\n      canvas.current.add(new fabric.Rect(\n        {top: 100, left: 100, width: 100, height: 100, fill: 'red'}\n      ));\n    }, []);\n    return fabricRef;\n  };\n\n\nexport default UseFabric\n\n\n\n  "]},"metadata":{},"sourceType":"module"}