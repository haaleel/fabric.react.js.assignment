{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/haleel/Downloads/Vidyalai font-end task/frontend-task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\"; // import { useEffect } from \"react\";\n\nimport { fabric } from \"fabric\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport \"./App.css\";\n\nfunction App() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [lineColor, setLineColor] = useState(\"black\");\n  const [lineOpacity, setLineOpacity] = useState(0.1); // Initialization when the component\n  // mounts for the first time\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.globalAlpha = lineOpacity;\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctxRef.current = ctx;\n  }, [lineColor, lineOpacity, lineWidth]); // Function for starting the drawing\n\n  const startDrawing = e => {\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    setIsDrawing(true);\n  }; // Function for ending the drawing\n\n\n  const endDrawing = () => {\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = e => {\n    if (!isDrawing) {\n      return;\n    }\n\n    ctxRef.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    ctxRef.current.stroke();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Paint App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draw-area\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        setLineColor: setLineColor,\n        setLineWidth: setLineWidth,\n        setLineOpacity: setLineOpacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: startDrawing,\n        onMouseUp: endDrawing,\n        onMouseMove: draw,\n        ref: canvasRef,\n        width: `1280px`,\n        height: `720px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vBshLpL7ABCoyr8cnVNUS8KxMSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/haleel/Downloads/Vidyalai font-end task/frontend-task/src/App.js"],"names":["fabric","useEffect","useRef","useState","Menu","App","canvasRef","ctxRef","isDrawing","setIsDrawing","lineWidth","setLineWidth","lineColor","setLineColor","lineOpacity","setLineOpacity","canvas","current","ctx","getContext","lineCap","lineJoin","globalAlpha","strokeStyle","startDrawing","e","beginPath","moveTo","nativeEvent","offsetX","offsetY","endDrawing","closePath","draw","lineTo","stroke"],"mappings":"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","sourcesContent":["import \"./App.css\";\n// import { useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport \"./App.css\";\n  \nfunction App() {\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [lineColor, setLineColor] = useState(\"black\");\n  const [lineOpacity, setLineOpacity] = useState(0.1);\n  \n  // Initialization when the component\n  // mounts for the first time\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.globalAlpha = lineOpacity;\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctxRef.current = ctx;\n  }, [lineColor, lineOpacity, lineWidth]);\n  \n  // Function for starting the drawing\n  const startDrawing = (e) => {\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(\n      e.nativeEvent.offsetX, \n      e.nativeEvent.offsetY\n    );\n    setIsDrawing(true);\n  };\n  \n  // Function for ending the drawing\n  const endDrawing = () => {\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  };\n  \n  const draw = (e) => {\n    if (!isDrawing) {\n      return;\n    }\n    ctxRef.current.lineTo(\n      e.nativeEvent.offsetX, \n      e.nativeEvent.offsetY\n    );\n      \n    ctxRef.current.stroke();\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Paint App</h1>\n      <div className=\"draw-area\">\n        <Menu\n          setLineColor={setLineColor}\n          setLineWidth={setLineWidth}\n          setLineOpacity={setLineOpacity}\n        />\n        <canvas\n          onMouseDown={startDrawing}\n          onMouseUp={endDrawing}\n          onMouseMove={draw}\n          ref={canvasRef}\n          width={`1280px`}\n          height={`720px`}\n        />\n      </div>\n    </div>\n  );\n}\n  \nexport default App;"]},"metadata":{},"sourceType":"module"}